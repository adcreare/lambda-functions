# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: ami-creator # NOTE: update this with your service name

provider:
  name: aws
  runtime: nodejs6.10

# you can overwrite defaults here
#  stage: dev
#  region: us-east-1
# you can add statements to the Lambda function's IAM Role here
  iamRoleStatements:
   - Effect: "Allow"
     Action:
       - "s3:*"
      #  - "s3:ListBucket"
      #  - "s3:GetObject"
     Resource:
       - "Fn::Join":
         - ""
         -
           - "arn:aws:s3:::"
           - "codepipeline-"
           - "Ref" : "AWS::Region"
           - "-*"
   - Effect: "Allow"
     Action:
       - "ec2:CreateImage"
     Resource: "*"
   - Effect: "Allow"
     Action:
       - "codepipeline:PutJobSuccessResult"
       - "codepipeline:PutJobFailureResult"
     Resource: "*"
   - Effect: "Allow"
     Action:
       - "dynamodb:*"
     Resource:
       - "Fn::Join":
         - ""
         -
           - "arn:aws:dynamodb:"
           - "Ref" : "AWS::Region"
           - ":"
           - "Ref" : "AWS::AccountId"
           - ":table/${self:custom.DynamoDBTableName}"
       - "Fn::Join":
         - ""
         -
           - "arn:aws:dynamodb:"
           - "Ref" : "AWS::Region"
           - ":"
           - "Ref" : "AWS::AccountId"
           - ":table/${self:custom.DynamoDBTableName}/*"
   - Effect: "Allow"
     Action:
       - "cloudformation:DeleteStack"
     Resource:
       - "Fn::Join":
         - ""
         -
           - "arn:aws:cloudformation:"
           - "Ref" : "AWS::Region"
           - ":"
           - "Ref" : "AWS::AccountId"
           - ":stack/*"


    # - Effect: "Allow"
    #   Action:
    #     - "s3:*"
    #   Resource:
    #     - 'Fn::Join':
    #       - ''
    #       -
    #         - 'arn:aws:s3:::'
    #         - ${self:custom.s3bucket.${opt:stage}}
    #     - 'Fn::Join':
    #       - ''
    #       -
    #         - 'arn:aws:s3:::'
    #         - ${self:custom.s3bucket.${opt:stage}}
    #         - '/*'

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

functions:
  engine:
    handler: ami-creator-engine.handlerequest

    environment:
      snapShotDescription: ami-creator-engine snapshot
      dynamodbTableName: ${self:custom.DynamoDBTableName}

  custom-resource-handler:
    handler: ami-custom-resource-responder.handlerequest
    environment:
      dynamodbTableName: ${self:custom.DynamoDBTableName}

custom:
    DynamoDBTableName: ami-store
# you can add CloudFormation resource templates here
resources:
  Resources:
    DynamoDBTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: ${self:custom.DynamoDBTableName}
        AttributeDefinitions:
          - AttributeName: amiid
            AttributeType: S
          - AttributeName: imagename
            AttributeType: S

        KeySchema:
          - AttributeName: amiid
            KeyType: HASH

        ProvisionedThroughput:
          ReadCapacityUnits: "1"
          WriteCapacityUnits: "1"

        GlobalSecondaryIndexes:
          -
            IndexName: ami-lookup-index
            KeySchema:
              -
                AttributeName: imagename
                KeyType: HASH

            Projection:
              # NonKeyAttributes:
              #   - "amiid"
              #   - "date"
              ProjectionType: ALL

            ProvisionedThroughput:
              ReadCapacityUnits: "1"
              WriteCapacityUnits: "1"

#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
